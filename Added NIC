{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Added_NIC.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPxjPeIv4iiIi/AJnpLE9+u",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/zahraa-m/PHE_UK/blob/main/PHE_UK.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PMvN-yot50pA"
      },
      "source": [
        "# In the code below, I prepared the data to:\n",
        "### This is a .\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
                  #calculate NIC in each area in the Greater Manchester
                  NIC_2020 = pd.crosstab(index=df_2020['NIC'], columns=df_2020['area_co'], margin=True).fillna(0).astype(int)
                  NIC_2021 = pd.crosstab(index=df_2021['NIC'], columns=df_2021['area_co'], margin=True).fillna(0).astype(int)


#filter the tables to include only medicine's name and NIC
df5 = NIC_2020.filter(['CHEMICAL_SUBSTANCE_BNF_DESCR', 'NIC_2020'])
df6 = NIC_2021.filter(['CHEMICAL_SUBSTANCE_BNF_DESCR', 'NIC_2021'])

#find the difference between NIC in 2020 and 2021
NIC_allyear = pd.merge(df5, df6, how="outer", on=('CHEMICAL_SUBSTANCE_BNF_DESCR')).fillna(0).astype(int)
diff_cost = (df6['NIC_2021'] - df5['NIC_2020'])
NIC_allyear['diff_NIC']= diff_NIC.fillna(0)

#find the percentage of the difference
diff_NIC_pct = (diff_NIC / df5['NIC_2020']) * 100
NIC_allyear['diff_NIC_pct']= diff_NIC_pct.fillna(0)

#Filter zero differance in cost
NIC_allyear=NIC_allyear.query("diff_NIC>0")

#plot the NIC difference the medicine of between 2021 and 2020
fig_NIC = px.line(NIC_allyear, x=NIC_allyear.index, y='diff_NIC',
                    labels={
                       "x": "Medicines",
                       "diff_NIC": "NIC difference"},
                   title='NIC difference between 2021 & 2020')
fig_NIC.show()

#plot the percentage of NIC difference between the medicine of 2021 and 2020
fig_NIC_pct = px.line(NIC_allyear, x=NIC_allyear.index, y='diff_NIC_pct',
                  labels={
                     "x": "Medicines",
                     "NIC_pct": "Cost Increase %"},
                 title='Percentage increase of NIC difference between 2021 & 2020')
fig_NIC_pct.update_traces(line_color='#F54730')
fig_NIC_pct.show()
